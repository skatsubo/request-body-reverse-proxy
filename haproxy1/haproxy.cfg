global
    maxconn 512

defaults
    mode    http
    option  forwardfor
    timeout connect 10s
    timeout client  30s
    timeout server  30s

    log-format %ci:%cp\ [%t]\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r\ bytes_upload=%U\ req_body_size=%[var(txn.req_body_size)]\ req_body_len=%[var(txn.req_body_len)]
    log stdout format raw local0

    # perform availability checks (L4 probes); never fail on address resolution
    default-server  check  resolvers docker  inter 1s  resolve-prefer ipv4  init-addr last,libc,none
 
resolvers docker
    nameserver docker-native 127.0.0.11:53
    resolve_retries 3
    timeout retry 1s
    hold valid 60s

frontend http-in
    bind *:80

    # https://www.haproxy.com/documentation/haproxy-configuration-manual/latest/#4.2-option%20http-buffer-request
    # > This option placed in a frontend or backend forces the HTTP processing to wait until either the whole body is received or the request buffer is full
    # https://www.haproxy.com/documentation/haproxy-configuration-manual/latest/#tune.bufsize 
    # effective buffer is roughly 15K = 16K-1K by default
    option http-buffer-request

    # persist vars for later phases for logging. Prevents fatal errors like:
    #   sample fetch <req.body_len]> may not be reliably used here because it needs 'HTTP request headers' which is not available here.
    http-request set-var(txn.req_body_size) req.body_size
    http-request set-var(txn.req_body_len) req.body_len

    acl formdata_text       req.body -m reg 'form-data; name="text"'
    acl formdata_image      req.body -m reg 'form-data; name="image"'

    use_backend     ml_text     if formdata_text
    use_backend     ml_image    if formdata_image
    default_backend ml_default

backend ml_text
    http-request set-header Host "$ML_TEXT_HOST_PORT"
    server ml_text "$ML_TEXT_HOST_PORT"

backend ml_image
    http-request set-header Host "$ML_IMAGE_HOST_PORT"
    server ml_image "$ML_IMAGE_HOST_PORT"

backend ml_default
    http-request set-header Host "$ML_DEFAULT_HOST_PORT"
    server ml_default "$ML_DEFAULT_HOST_PORT"
